{"filter":false,"title":"a5.py","tooltip":"/flask-app/pages/a5.py","undoManager":{"mark":1,"position":1,"stack":[[{"start":{"row":0,"column":0},"end":{"row":51,"column":53},"action":"remove","lines":["from flask import (","    Blueprint,","    request,","    redirect,","    make_response,","    render_template",")","","from models import (","    get_user,","    get_user_by_password",")","","from utils import (","    generate_session,","    parse_session",")","","bp = Blueprint(","    \"a5\", __name__,","    template_folder='templates',","    static_folder='static'",")","","@bp.route(\"/A5\")","def a5():","    return render_template(\"a5.html\")","","@bp.route(\"/A5/auth\", methods=['POST'])","def a5_auth():","    username = request.form.get(\"username\")","    password = request.form.get(\"password\")","    user = get_user_by_password(username, password)","    if not user:","        return render_template(\"error.html\", message=\"Invalid Credentials\")","    ","    # Generate SessionID","    session_id = generate_session(username)","    response = make_response(redirect(\"/owasp/A5/profile/{}\".format(username)))","    response.set_cookie(\"sessionId\", session_id)","    ","    return response","","@bp.route(\"/A5/profile/<username>\")","def a5_profile(username):","    if not request.cookies.get(\"sessionId\"):","        return (\"<h1>Not Authorized!</h1>\")","    session = parse_session(request.cookies.get(\"sessionId\"))","    user = get_user(username)","    if not user:","        return render_template(\"404.html\")","    return render_template(\"profile.html\", user=user)"],"id":2},{"start":{"row":0,"column":0},"end":{"row":52,"column":0},"action":"insert","lines":["from flask import (","    Blueprint,","    request,","    redirect,","    make_response,","    render_template",")","","from models import (","    get_user,","    get_user_by_password",")","","from utils import (","    generate_session,","    parse_session",")","","bp = Blueprint(","    \"a5\", __name__,","    template_folder='templates',","    static_folder='static'",")","","@bp.route(\"/A5\")","def a5():","    return render_template(\"a5.html\")","","@bp.route(\"/A5/auth\", methods=['POST'])","def a5_auth():","    username = request.form.get(\"username\")","    password = request.form.get(\"password\")","    user = get_user_by_password(username, password)","    if not user:","        return render_template(\"error.html\", message=\"Invalid Credentials\")","    ","    # Generate SessionID","    session_id = generate_session(username)","    response = make_response(redirect(\"/owasp/A5/profile/{}\".format(username)))","    response.set_cookie(\"sessionId\", session_id, httponly=True)","    ","    return response","","@bp.route(\"/A5/profile/<username>\")","def a5_profile(username):","    if not request.cookies.get(\"sessionId\"):","        return (\"<h1>Not Authorized!</h1>\")","    session = parse_session(request.cookies.get(\"sessionId\"))","    user = get_user(username)","    if not user:","        return render_template(\"404.html\")","    return render_template(\"profile.html\", user=user)",""]}],[{"start":{"row":0,"column":0},"end":{"row":52,"column":0},"action":"remove","lines":["from flask import (","    Blueprint,","    request,","    redirect,","    make_response,","    render_template",")","","from models import (","    get_user,","    get_user_by_password",")","","from utils import (","    generate_session,","    parse_session",")","","bp = Blueprint(","    \"a5\", __name__,","    template_folder='templates',","    static_folder='static'",")","","@bp.route(\"/A5\")","def a5():","    return render_template(\"a5.html\")","","@bp.route(\"/A5/auth\", methods=['POST'])","def a5_auth():","    username = request.form.get(\"username\")","    password = request.form.get(\"password\")","    user = get_user_by_password(username, password)","    if not user:","        return render_template(\"error.html\", message=\"Invalid Credentials\")","    ","    # Generate SessionID","    session_id = generate_session(username)","    response = make_response(redirect(\"/owasp/A5/profile/{}\".format(username)))","    response.set_cookie(\"sessionId\", session_id, httponly=True)","    ","    return response","","@bp.route(\"/A5/profile/<username>\")","def a5_profile(username):","    if not request.cookies.get(\"sessionId\"):","        return (\"<h1>Not Authorized!</h1>\")","    session = parse_session(request.cookies.get(\"sessionId\"))","    user = get_user(username)","    if not user:","        return render_template(\"404.html\")","    return render_template(\"profile.html\", user=user)",""],"id":3},{"start":{"row":0,"column":0},"end":{"row":54,"column":0},"action":"insert","lines":["from flask import (","    Blueprint,","    request,","    redirect,","    make_response,","    render_template",")","","from models import (","    get_user,","    get_user_by_password",")","","from utils import (","    generate_session,","    parse_session",")","","bp = Blueprint(","    \"a5\", __name__,","    template_folder='templates',","    static_folder='static'",")","","@bp.route(\"/A5\")","def a5():","    return render_template(\"a5.html\")","","@bp.route(\"/A5/auth\", methods=['POST'])","def a5_auth():","    username = request.form.get(\"username\")","    password = request.form.get(\"password\")","    user = get_user_by_password(username, password)","    if not user:","        return render_template(\"error.html\", message=\"Invalid Credentials\")","    ","    # Generate SessionID","    session_id = generate_session(username)","    response = make_response(redirect(\"/owasp/A5/profile/{}\".format(username)))","    response.set_cookie(\"sessionId\", session_id)","    ","    return response","","@bp.route(\"/A5/profile/<username>\")","def a5_profile(username):","    if not request.cookies.get(\"sessionId\"):","        return (\"<h1>Not Authorized!</h1>\")","    session = parse_session(request.cookies.get(\"sessionId\"))","    if session['username'] != username:","        return (\"<h1>Not Authorized!</h1>\")","    user = get_user(username)","    if not user:","        return render_template(\"404.html\")","    return render_template(\"profile.html\", user=user)",""]}]]},"ace":{"folds":[],"scrolltop":446,"scrollleft":0,"selection":{"start":{"row":54,"column":0},"end":{"row":54,"column":0},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":{"row":30,"state":"start","mode":"ace/mode/python"}},"timestamp":1676183042357,"hash":"ae80a5867c69a5acb8af2fa93d1931cf8f54f8e2"}